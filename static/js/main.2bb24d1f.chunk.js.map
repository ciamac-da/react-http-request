{"version":3,"sources":["axios.js","components/Post/Post.js","containers/Blog/FullPost/FullPost.js","containers/Blog/Posts/Posts.js","containers/Blog/Blog.js","hoc/asyncComponent.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","defaults","headers","common","withRouter","props","className","onClick","clicked","title","author","FullPost","state","loadedPost","deletePostHandler","delete","match","params","id","then","response","console","log","this","loadData","get","setState","data","catch","error","post","style","textAlign","body","Component","Posts","posts","postSelectedHandler","history","push","updatedPosts","slice","map","path","url","exact","component","AsyncNewPost","importComponent","cmp","default","C","asyncComponent","Blog","auth","to","activeClassName","activeStyle","color","textDecoration","pathname","hash","search","render","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","interceptors","request","use","Promise","reject","ReactDOM","StrictMode","document","getElementById"],"mappings":"+XAGMA,EAAWC,IAAMC,OAAO,CAC1BC,QAAQ,yCAGZH,EAASI,SAASC,QAAQC,OAA1B,aAAkD,2BAInCN,Q,eCEAO,eATF,SAACC,GAAD,OACT,0BAASC,UAAU,OAAOC,QAASF,EAAMG,QAAzC,UACI,6BAAKH,EAAMI,QACX,qBAAKH,UAAU,OAAf,SACI,qBAAKA,UAAU,SAAf,SAAyBD,EAAMK,iBCyD5BC,G,kNA5DbC,MAAQ,CACNC,WAAY,M,EA8BdC,kBAAoB,WAClBhB,IAAMiB,OAAO,UAAY,EAAKV,MAAMW,MAAMC,OAAOC,IAC5CC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,O,uDA9BtB,WACEC,QAAQC,IAAIC,KAAKlB,OACjBkB,KAAKC,a,gCAGT,WACID,KAAKC,a,sBAGP,WAAY,IAAD,OACLD,KAAKlB,MAAMW,MAAMC,OAAOC,MACpBK,KAAKX,MAAMC,YAAeU,KAAKX,MAAMC,YAAcU,KAAKX,MAAMC,WAAWK,KAAOK,KAAKlB,MAAMW,MAAMC,OAAOC,KAC5GpB,IACG2B,IAAI,UAAYF,KAAKlB,MAAMW,MAAMC,OAAOC,IACxCC,MAAK,SAACC,GACL,EAAKM,SAAS,CACZb,WAAYO,EAASO,UAGxBC,OAAM,SAAAC,GACLR,QAAQC,IAAIO,Q,oBAetB,WACE,IAAIC,EAAO,mBAAGC,MAAO,CAAEC,UAAW,UAAvB,mCAgBX,OAfST,KAAKlB,MAAMW,MAAMC,OAAOC,KACzBY,EAAO,mBAAGC,MAAO,CAAEC,UAAW,UAAvB,0BAENT,KAAKX,MAAMC,aACZiB,EACI,sBAAKxB,UAAU,WAAf,UACI,6BAAKiB,KAAKX,MAAMC,WAAWJ,QAC3B,4BAAIc,KAAKX,MAAMC,WAAWoB,OAC1B,qBAAK3B,UAAU,OAAf,SACI,wBAAQC,QAASgB,KAAKT,kBAAmBR,UAAU,SAAnD,0BAMbwB,M,GAzDYI,cC4DRC,G,kNAvDXvB,MAAQ,CACJwB,MAAO,I,EAqBXC,oBAAsB,SAACnB,GACnB,EAAKb,MAAMiC,QAAQC,KAAK,UAAYrB,I,uDApBxC,WAAoB,IAAD,OACfG,QAAQC,IAAIC,KAAKlB,OACjBP,EAAM2B,IAAI,UACTN,MAAK,SAAAC,GACF,IACMoB,EADQpB,EAASO,KAAKc,MAAM,EAAE,GACTC,KAAI,SAAAZ,GAC3B,OAAO,2BACAA,GADP,IAEIpB,OAAQ,cAGhB,EAAKgB,SAAS,CAACU,MAAMI,OAExBZ,OAAM,SAAAC,GAEJR,QAAQC,IAAIO,Q,oBAQnB,WAAS,IAAD,OAEAO,EAAQ,mBAAGL,MAAO,CAACC,UAAU,UAArB,mCAeZ,OAdIT,KAAKX,MAAMiB,QACPO,EAAQb,KAAKX,MAAMwB,MAAMM,KAAI,SAAAZ,GAE7B,OACA,cAAC,EAAD,CACApB,OAAQoB,EAAKpB,OACbD,MAAOqB,EAAKrB,MACZD,QAAS,kBAAK,EAAK6B,oBAAoBP,EAAKZ,WAQhD,gCACI,yBAASZ,UAAU,QAAnB,SACK8B,IAEL,cAAC,IAAD,CAAOO,KAAMpB,KAAKlB,MAAMW,MAAM4B,IAAM,OAAQC,OAAK,EAACC,UAAWnC,W,GAlDzDuB,cCEda,ECPiB,SAACC,GACpB,mNACIpC,MAAQ,CACJkC,UAAW,MAFnB,uDAKI,WAAsB,IAAD,OACjBE,IACK7B,MAAK,SAAA8B,GACF,EAAKvB,SAAS,CAACoB,UAAWG,EAAIC,eAR9C,oBAYI,WACI,IAAMC,EAAI5B,KAAKX,MAAMkC,UAErB,OAAOK,EAAI,cAACA,EAAD,eAAO5B,KAAKlB,QAAY,SAf3C,GAAqB6B,aDMJkB,EAAe,WAChC,OAAO,gCA4CIC,E,4MAxCXzC,MAAQ,CACJ0C,MAAM,G,4CAGV,WACI,OACI,sBAAKhD,UAAU,OAAf,UACI,iCACI,8BACI,+BACI,6BAAI,cAAC,IAAD,CACAiD,GAAG,UACHV,OAAK,EACLW,gBAAgB,YAChBC,YAAa,CACTC,MAAO,UACPC,eAAgB,aANpB,qBAQJ,6BAAI,cAAC,IAAD,CAASJ,GAAI,CACbK,SAAU,YACVC,KAAM,UACNC,OAAQ,sBAHR,+BAUhB,eAAC,IAAD,WACKvC,KAAKX,MAAM0C,KAAO,cAAC,IAAD,CAAOX,KAAK,YAAYG,UAAWC,IAAmB,KACzE,cAAC,IAAD,CAAOJ,KAAK,SAASG,UAAWX,IAChC,cAAC,IAAD,CAAO4B,OAAQ,kBAAM,wD,GAhCtB7B,aEKJ8B,G,kKAXb,WACE,OACE,cAAC,IAAD,UACA,qBAAK1D,UAAU,MAAf,SACE,cAAC,EAAD,Y,GALU4B,cCMH+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhD,MAAK,YAAkD,IAA/CiD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdpE,IAAMG,SAASD,QAAU,uCACzBF,IAAMG,SAASC,QAAQC,OAAvB,aAA+C,aAC/CL,IAAMG,SAASC,QAAQ4B,KAAK,gBAAkB,mBAG9ChC,IAAM2E,aAAaC,QAAQC,KAAI,SAAAD,GAE7B,OADArD,QAAQC,IAAIoD,GACLA,KACN,SAAA7C,GAED,OADAR,QAAQC,IAAIO,GACL+C,QAAQC,OAAOhD,MAGxB/B,IAAM2E,aAAarD,SAASuD,KAAI,SAAAvD,GAE9B,OADAC,QAAQC,IAAIF,GACLA,KACN,SAAAS,GAED,OADAR,QAAQC,IAAIO,GACL+C,QAAQC,OAAOhD,MAGxBiD,IAASf,OACP,cAAC,IAAMgB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BhB,M","file":"static/js/main.2bb24d1f.chunk.js","sourcesContent":["import axios from \"axios\";\n\n\nconst instance = axios.create({\n    baseURL:\"https://jsonplaceholder.typicode.com\"\n});\n\ninstance.defaults.headers.common['Autorization'] =\"AUTH TOKEN FROM INSTANCE\"\n\n\n\nexport default instance;","import React from 'react';\nimport {withRouter} from \"react-router-dom\";\nimport './Post.css';\n\nconst post = (props) => (\n    <article className=\"Post\" onClick={props.clicked}>\n        <h1>{props.title}</h1>\n        <div className=\"Info\">\n            <div className=\"Author\">{props.author}</div>\n        </div>\n    </article>\n);\n\nexport default withRouter(post);","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./FullPost.css\";\n\nclass FullPost extends Component {\n  state = {\n    loadedPost: null,\n  };\n\n  componentDidMount () {\n    console.log(this.props);\n    this.loadData();\n}\n\ncomponentDidUpdate() {\n    this.loadData();\n}\n\n  loadData() {\n    if (this.props.match.params.id) {\n      if ( !this.state.loadedPost || (this.state.loadedPost && this.state.loadedPost.id !== this.props.match.params.id)) {\n        axios\n          .get(\"/posts/\" + this.props.match.params.id)\n          .then((response) => {\n            this.setState({\n              loadedPost: response.data,\n            });\n          })\n          .catch(error =>{\n            console.log(error)\n        })\n      }\n    }\n  };\n\n\n  deletePostHandler = () => {\n    axios.delete('/posts/' + this.props.match.params.id)\n        .then(response => {\n            console.log(response);\n        });\n}\n\n\n  render() {\n    let post = <p style={{ textAlign: 'center' }}>Please select a Post!</p>;\n        if ( this.props.match.params.id ) {\n            post = <p style={{ textAlign: 'center' }}>Loading...!</p>;\n        }\n        if ( this.state.loadedPost ) {\n            post = (\n                <div className=\"FullPost\">\n                    <h1>{this.state.loadedPost.title}</h1>\n                    <p>{this.state.loadedPost.body}</p>\n                    <div className=\"Edit\">\n                        <button onClick={this.deletePostHandler} className=\"Delete\">Delete</button>\n                    </div>\n                </div>\n\n            );\n        }\n    return post;\n  }\n}\n\nexport default FullPost;\n","import React, {Component} from 'react';\nimport axios from \"../../../axios\";\nimport Post from \"../../../components/Post/Post\";\nimport { Route } from \"react-router-dom\";\nimport FullPost from '../FullPost/FullPost';\nimport \"./Posts.css\";\n\nclass Posts extends Component{\n    \n    state = {\n        posts :[]\n    }\n    componentDidMount(){\n        console.log(this.props)\n        axios.get(\"/posts\")\n        .then(response =>{\n            const posts = response.data.slice(0,4)\n            const updatedPosts = posts.map(post =>{\n                return {\n                    ...post,\n                    author: \"Ciamac\"\n                }\n            })\n            this.setState({posts:updatedPosts})\n        })\n        .catch(error =>{\n           // this.setState({ error : true })\n           console.log(error)\n        })\n    }\n\n    postSelectedHandler = (id) => {\n        this.props.history.push(\"/posts/\" + id );\n     }\n\n    render(){\n       \n        let posts = <p style={{textAlign:\"center\"}}>Something went wrong!</p>\n        if(!this.state.error){\n                posts = this.state.posts.map(post=>{\n             \n                return (\n                <Post \n                author={post.author}  \n                title={post.title}\n                clicked={()=> this.postSelectedHandler(post.id)}\n                />\n                )\n            })\n\n        }\n\n        return(\n            <div>\n                <section className=\"Posts\">\n                    {posts}\n                </section>\n                <Route path={this.props.match.url + '/:id'} exact component={FullPost} />\n            </div>\n        )\n\n    }\n}\n\nexport default Posts;","import React, { Component } from 'react';\n// import axios from 'axios';\nimport { Route, NavLink, Switch, Redirect } from 'react-router-dom';\n\nimport './Blog.css';\nimport Posts from './Posts/Posts';\nimport asyncComponent from '../../hoc/asyncComponent';\n// import NewPost from './NewPost/NewPost';\n\nconst AsyncNewPost = asyncComponent(() => {\n    return import('./NewPost/NewPost');\n});\n\nclass Blog extends Component {\n    state = {\n        auth: true\n    }\n\n    render () {\n        return (\n            <div className=\"Blog\">\n                <header>\n                    <nav>\n                        <ul>\n                            <li><NavLink\n                                to=\"/posts/\"\n                                exact\n                                activeClassName=\"my-active\"\n                                activeStyle={{\n                                    color: '#fa923f',\n                                    textDecoration: 'underline',\n                                }}>Posts</NavLink></li>\n                            <li><NavLink to={{\n                                pathname: '/new-post',\n                                hash: '#submit',\n                                search: '?quick-submit=true'\n                            }}>New Post</NavLink></li>\n                        </ul>\n                    </nav>\n                </header>\n                {/* <Route path=\"/\" exact render={() => <h1>Home</h1>} />\n                <Route path=\"/\" render={() => <h1>Home 2</h1>} /> */}\n                <Switch>\n                    {this.state.auth ? <Route path=\"/new-post\" component={AsyncNewPost} /> : null}\n                    <Route path=\"/posts\" component={Posts} />\n                    <Route render={() => <h1>Not found</h1>}/>\n                    {/* <Redirect from=\"/\" to=\"/posts\" /> */}\n                    {/* <Route path=\"/\" component={Posts} /> */}\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default Blog;","import React, { Component } from 'react';\n\nconst asyncComponent = (importComponent) => {\n    return class extends Component {\n        state = {\n            component: null\n        }\n\n        componentDidMount () {\n            importComponent()\n                .then(cmp => {\n                    this.setState({component: cmp.default});\n                });\n        }\n        \n        render () {\n            const C = this.state.component;\n\n            return C ? <C {...this.props} /> : null;\n        }\n    }\n}\n\nexport default asyncComponent;","import React, { Component } from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport Blog from './containers/Blog/Blog';\nimport \"./App.css\"\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n        <Blog />\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport axios from \"axios\";\n\naxios.defaults.baseURL = \"https://jsonplaceholder.typicode.com\"\naxios.defaults.headers.common['Autorization'] =\"AUTH TOKEN\"\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\n\naxios.interceptors.request.use(request=>{\n  console.log(request)\n  return request\n}, error => {\n  console.log(error)\n  return Promise.reject(error)\n});\n\naxios.interceptors.response.use(response=>{\n  console.log(response)\n  return response\n}, error => {\n  console.log(error)\n  return Promise.reject(error)\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}